kong:
  enabled: true
  fullnameOverride: kong
  proxy:
    type: ClusterIP

  dblessConfig:
    configMap: kong-config

  env:
    database: "off"

  customEnv:
    DUMMY: "006" #Update this when Kong configuration is changed in order to restart the pods

  ingressController:
    enabled: false # This is required in DB less mode

  admin:
    enabled: true
    type: ClusterIP
    http:
      enabled: true

konga:
  nameOverride: konga
  enabled: true
  podDisruptionBudget:
    enabled: false
  pods:
    controller: deployment
    image:
      name: "pantsel/konga"
      tag: "latest"
    ports:
      - name: http
        containerPort: 1337
        protocol: TCP
    env:
      - name: KONGA_SEED_USER_DATA_SOURCE_FILE
        value: /configs/konga-users.cfg

      - name: KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE
        value: /configs/konga-nodes.cfg
    volumes:
      - name: config
        secret:
          secretName: konga-credentials
          optional: false
    volumeMounts:
      - name: config
        mountPath: /configs
  ingress:
    enabled: false

  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 1337
        protocol: TCP
        name: http

### Telegraf ###
telegraf:
  enabled: true
  nameOverride: telegraf
  config:
    inputs:
      - http_listener_v2:
          service_address: ":8080"
          data_format: "json"

### Car Park API ###
carpark-api:
  enabled: true
  nameOverride: carpark-api

  podDisruptionBudget:
    enabled: false

  pods:
    controller: deployment
    image:
      name: asia-southeast1-docker.pkg.dev/promrub-personal-use/promjodd/carpark-service
    imagePullSecrets :
      - name: gcr-image-pull # TODO : use External-Secret to create this
    volumes:
      - name: appsetting
        secret:
          secretName: carpark-api-appsetting
          optional: false
    volumeMounts:
      - name: appsetting
        mountPath: /app/appsettings.json
        subPath: appsettings.json

  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 80
        protocol: TCP
        name: http

postgresql-carpark-api:
  enabled: true
  fullnameOverride: postgresql-carpark-api
  auth:
    database: carpark-api
    existingSecret: carpark-api-postgres-secret
    secretKeys:
      adminPasswordKey: adminPasswordKey

pgweb:
  #CREATE USER bank WITH PASSWORD 'xxxxx';
  #GRANT ALL ON ALL TABLES IN SCHEMA public TO bank;
  enabled: true
  nameOverride: pgweb
  ingress:
    enabled: false

pmt-driver-ui:
  enabled: true
  nameOverride: pmt-driver-ui

  podDisruptionBudget:
    enabled: false

  pods:
    controller: deployment
    image:
      name: asia-southeast1-docker.pkg.dev/promrub-personal-use/promjodd/pmt-driver-ui
  service:
    enabled: true
    ports:
      - port: 80
        targetPort: 80
        protocol: TCP
        name: http
